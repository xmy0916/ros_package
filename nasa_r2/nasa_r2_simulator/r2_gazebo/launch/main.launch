<?xml version="1.0"?>
<launch>
  <arg name="robot"     default="true" />
  <arg name="gui"       default="true" />
  <arg name="taskboard" default="false" />
  <arg name="world"     default="r2_empty" /> <!-- r2_ISS,  r2_ISS_simple, r2_empty_no_gravity-->
  <arg name="gravity"   default="true" />
  <arg name="legs"      default="false" />
  <arg name="debug"     default="false" />
  <arg name="i_control" default="false" />
  
  <param name="/use_sim_time" value="true"/>

  <!-- load world -->
  <node name="gazebo" pkg="gazebo_ros" type="debug" args="$(find r2_gazebo)/gazebo/$(arg world).world" output="screen" respawn="false" required="True" if="$(arg debug)"/>
  <node name="gazebo" pkg="gazebo_ros" type="gzserver" args="$(find r2_gazebo)/gazebo/$(arg world).world" output="screen" respawn="false" required="True" unless="$(arg debug)"/>
  
  <group if="$(arg gravity)">
    <param name="/gravity/x" value="0"/>
    <param name="/gravity/y" value="0"/>
    <param name="/gravity/z" value="0"/>
  </group>
  
  <!-- load controller parameters-->
  <rosparam file="$(find r2_gazebo)/config/controllers/r2sim_legs_params.yaml"  command="load" if="$(arg legs)"/>
  <rosparam file="$(find r2_gazebo)/config/controllers/r2sim_torso_params.yaml" command="load" />
  
  <!-- load robot -->
  <group if="$(arg robot)">
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find r2_gazebo)/robots/r2.sim.urdf.xacro'" /> 
    <node name="spawn_r2" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model r2 -paused=true" respawn="false" output="screen" /> 
    
    <!-- load controller -->
    <rosparam file="$(find r2_gazebo)/config/controllers/r2_impedance_controller.yaml"        command="load" ns="/r2"     if="$(arg i_control)"/>
    <rosparam file="$(find r2_gazebo)/config/controllers/r2_joint_trajectory_controller.yaml" command="load" ns="/r2" unless="$(arg i_control)"/>

    <arg name="cparams" value="r2_controller"                         if="$(arg i_control)"/>
    <arg name="cparams" value="r_arm_controller l_arm_controller" unless="$(arg i_control)"/>

  <!-- spawn controller -->
    <node name="default_controllers_spawner" pkg="controller_manager" type="spawner" output="screen" ns="/r2"
          args="joint_state_controller $(arg cparams)" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen">
      <remap from="/joint_states" to="/r2/joint_states" />
    </node>
  </group>
  
  <!-- load taskboard -->
  <group if="$(arg taskboard)">
    <param name="taskboard_description" command="$(find xacro)/xacro.py '$(find r2_gazebo)/urdf/taskboard.urdf.xacro'" />  
    <node name="spawn_taskboard" pkg="gazebo_ros" type="spawn_model" args="-urdf -param taskboard_description -model taskboard" respawn="false" output="screen" /> 
    
    <!-- load taskboard connectors -->  <!-- ANNOYING!! THESE NEED TO BE DEFINED AFTER A BIT OF A DELAY OR NOT ALL THE MODELS SHOW UP.  FIXME! -->
    <param name="taskboard_B01_description" command="$(find xacro)/xacro.py '$(find r2_gazebo)/urdf/taskboard_B01.urdf.xacro'" />
    <param name="taskboard_B05_description" command="$(find xacro)/xacro.py '$(find r2_gazebo)/urdf/taskboard_B05.urdf.xacro'" /> 
    <node name="spawn_taskboard_B01" pkg="gazebo_ros" type="spawn_model" args="-urdf -param taskboard_B01_description -model taskboard_B01" respawn="false" output="screen"/> 
    <node name="spawn_taskboard_B05" pkg="gazebo_ros" type="spawn_model" args="-urdf -param taskboard_B05_description -model taskboard_B05" respawn="false" output="screen"/>

    <node pkg="robot_state_publisher" type="state_publisher" name="rob_st_pub" >
      <remap from="robot_description" to="taskboard_description" />
    </node>
  </group>


  <!-- start gui -->
  <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" if="$(arg gui)"/>

 <!-- start dynamic reconfigure nodes to make real-robot scripts not crash on sim >
 <include file="$(find r2_dynamic_reconfigure)/launch/fake_reconfigure_server.launch" /-->



</launch>


